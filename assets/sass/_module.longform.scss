/*------------------------------------*\
    $LONGFORM
\*------------------------------------*/

// Longform styles from type-sizes.scss
.longform {
    h1 { @include type-alpha--xl }
    h2 { @include type-alpha--l  }
    h3 { @include type-alpha--m--bold }
    h4 { @include type-alpha--s--uppercase }
    h5 { @include type-alpha--s--bold }
    h6 { }

    h1, h2, h3, h4, h5, h6 {
        
    }

    p { @include p; }
    ul { @include p; }
    ol { @include p; }
    dt { @include p; }
    dd { @include p; }


    a:not(.button-link) {
        color: $link-color--beta;
        &:hover, &:focus {
            color: $link-color-hover--beta;
        }
    }
    blockquote {
      @include type-alpha--l;
      font-weight: 500;
      color: $text-color--alpha;
      small {
          margin-top: $space-half;
          display: block;
          @include type-alpha--s;
      }
    }
    p.type-alpha--s--bold {
        @include type-alpha--s--bold;
    }
    figure.float--left {
        float: none;
        @include media('>medium') {
            float: left;
            padding-right: $padding;
        }
    }
    figcaption {
        @include type-beta--xs;
    }
    hr {
        margin-top: rem(15);
        margin-bottom: rem(15);
        @include media('>=large') {
            margin-top: rem(30);
            margin-bottom: rem(30);
        }
    }
}





// Longform styles from type-styles.scss
ol, ul {
  .longform & {
    margin-left: $space;
    li > ol,
    li > ul {
      margin-top: rem(lh(mobile)/2);
      @include media('>xlarge') {
        margin-top: rem(lh(desktop)/2);
      }
    }
    & > li {
      position: relative;
      & + li {
        margin-top: rem(lh(mobile)/2);
        @include media('>xlarge') {
          margin-top: rem(lh(desktop)/2);
        }
      }
    }
  }
}
ol {
  .longform & {
    counter-reset: li;
    margin-left: 0;
    & > li {
      list-style: none;
      padding-left: $padding-and-half;
      &:before {
        content: counter(li, decimal);
        counter-increment: li;
        position: absolute;
        top: rem(-1);
        left: 0;
        @include type-beta--s;
      }
      & > ol > li {
        &:before {
            content: counter(li, lower-alpha);
        }
        & > ol > li {
          &:before {
              content: counter(li, lower-roman);
          }
        }
      }
    }
  }
}
ul {
    .longform & {
        li {
            list-style: disc;
            padding-left: $padding-half;
            li {
                list-style-type: circle;
            }
        }
    }
}
